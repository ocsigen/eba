(* This file was generated by Ocsigen-start.
   Feel free to use it, modify it, and redistribute it as you wish. *)

(** carousel demo ************************************************************)

[%%shared
  open Eliom_content.Html
  open Eliom_content.Html.D
]

let%client (carousel_update, carousel_change) = React.E.create ()

let%server service =
  Eliom_service.create
    ~path:(Eliom_service.Path ["demo-carousel"])
    ~meth:(Eliom_service.Get Eliom_parameter.unit)
    ()

let%client service = ~%service

let%shared name = "Carousel"

let%shared page () =
  let make_page content =
    div ~a:[a_class ["demo-carousel1-page"]] [pcdata content]
  in
  let carousel_pages = ["1"; "2"; "3"] in
  let ribbon_content = List.map (fun p -> [pcdata p]) carousel_pages in
  let carousel_content = List.map make_page carousel_pages in
  let bullets_content =
    List.map (fun n -> [div [p [pcdata n]]]) carousel_pages
  in
  let r = Os_tools.Carousel.make
      ~update:[%client carousel_update]
      ~change:[%client carousel_change]
      ~carousel:([a_class ["demo-carousel1"]], carousel_content)
      ~ribbon:([], ribbon_content)
      ~previous:([a_class ["button"]], [pcdata "←"])
      ~next:([a_class ["button"]], [pcdata "→"])
      ~bullets:([], bullets_content)
      ()
  in
  let carousel, ribbon, prev, next, bullets = match r with
    | c, Some r, Some p, Some n, Some b -> c, r, p, n, b
    | _ -> assert false
  in
  Lwt.return
    [
      p [pcdata "The carousel displays a number of blocks side-by-side (or \
                 vertically stacked)."];
      p [pcdata "To switch to a different block, either use the buttons \
                 above or below the carousel."];
      p [pcdata "In the mobile app you can also swipe the screen."];
      ribbon; carousel; p [prev; next];
      div ~a:[a_class ["demo-carousel1-bullets"]] [ bullets ]
    ]
