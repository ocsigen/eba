(* This file was generated by Ocsigen-start.
   Feel free to use it, modify it, and redistribute it as you wish. *)

(** This module defines the default template for application pages *)


let%shared navigation_bar =
  let nav_elts = [
    ("Home",Os_services.main_service);
    ("About",%%%MODULE_NAME%%%_services.about_service);
    ("Demo",%%%MODULE_NAME%%%_services.otdemo_service)
  ] in
  fun () ->
    Os_tools.Navigation_bar.ul_of_elts
      ~ul_class:["nav";"navbar-nav"]
      nav_elts

let%shared os_header ?user () = Eliom_content.Html.F.(
  ignore user;
  let%lwt user_box =
    %%%MODULE_NAME%%%_userbox.userbox user in
  let%lwt navigation_bar = navigation_bar () in
  Lwt.return (
    nav ~a:[a_class ["navbar";"navbar-inverse";"navbar-relative-top"]] [
      div ~a:[a_class ["container-fluid"]] [
        div ~a:[a_class ["navbar-header"]][
          a ~a:[a_class ["navbar-brand"]]
            ~service:Os_services.main_service [
              pcdata %%%MODULE_NAME%%%_base.displayed_app_name;
            ] ();
          user_box
        ];
        navigation_bar
      ]
    ]
  )
)

let%shared os_footer () = Eliom_content.Html.F.(
  footer ~a:[a_class ["footer";"navbar";"navbar-inverse"]] [
    div ~a:[a_class ["container"]] [
      p [
        pcdata "This application has been generated using the ";
        a ~service:%%%MODULE_NAME%%%_services.os_github_service [
          pcdata "Ocsigen-start"
        ] ();
        pcdata " template for Eliom-distillery and uses the ";
        a ~service:%%%MODULE_NAME%%%_services.ocsigen_service [
          pcdata "Ocsigen"
        ] ();
        pcdata " technology.";
      ]
    ]
  ]
)

let%server get_wrong_pdata () =
  Lwt.return @@ Eliom_reference.Volatile.get Os_msg.wrong_pdata

let%client get_wrong_pdata =
  ~%(Eliom_client.server_function [%derive.json : unit] get_wrong_pdata)

let%shared connected_welcome_box () = Eliom_content.Html.F.(
  let%lwt wrong_pdata = get_wrong_pdata () in
  let info, ((fn, ln), (p1, p2)) =
    match wrong_pdata with
    | None ->
      p [
        pcdata "Your personal information has not been set yet.";
        br ();
        pcdata "Please take time to enter your name and to set a password."
      ], (("", ""), ("", ""))
    | Some wpd -> p [pcdata "Wrong data. Please fix."], wpd
  in
  Lwt.return @@
    div ~a:[a_class ["os-login-menu";"os-welcome-box"]] [
      div [h2 [pcdata ("Welcome!")]; info];
      Os_view.information_form
        ~firstname:fn ~lastname:ln
        ~password1:p1 ~password2:p2
        ()
    ]
)

let%shared get_user_data = function
  | None ->
    Lwt.return None
  | Some myid ->
    let%lwt u = Os_user_proxy.get_data myid in
    Lwt.return (Some u)

let%shared page myid_o content = Eliom_content.Html.F.(
  let%lwt user = get_user_data myid_o in
  let%lwt content = match user with
    | Some user when not (Os_user.is_complete user) ->
      let%lwt cwb = connected_welcome_box () in
      Lwt.return @@ cwb :: content
    | _ ->
      Lwt.return @@ content
  in
  let l = [
    div ~a:[a_class ["os-body"]] content;
    os_footer ();
  ] in
  let%lwt h = os_header ?user () in
  Lwt.return @@ h :: l
)


